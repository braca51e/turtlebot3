<!--
  Launch file to perform mapping using octomap with the radar
 -->
<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration, radar_octo]"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>
  <arg name="scan_method" default="radar" doc="type of scan method"/>
  <arg name="set_base_frame" default="base_footprint"/>
  <arg name="set_odom_frame" default="odom"/>
  <arg name="set_map_frame"  default="map"/>

  <!-- TurtleBot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="scan_method" value="$(arg scan_method)"/>
  </include>

  <!-- Gmapping -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_gmapping.launch">
  </include>

  <!-- Add nodes to filter/limit Radar data before using it for mapping -->
  <include file="$(find turtlebot_mmwave_launchers)/launch/radar_limit_filters.launch">
  </include>

  <!-- Create 3D map using first octomap node -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_raw" output="screen" >

    <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
    <param name="base_frame" value="$(arg set_base_frame)"/>
    <param name="odom_frame" value="$(arg set_odom_frame)"/>
    <param name="map_frame"  value="$(arg set_map_frame)"/>
    <!-- maximum range to integrate (speedup!) -->
    <param name="sensor_model/max_range" value="70.0" />

    <remap from="cloud_in" to="/ti_mmwave/radar_scan_pcl_0" />
  </node>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_slam)/rviz/turtlebot3_radar.rviz"/>
  </group>
</launch>

