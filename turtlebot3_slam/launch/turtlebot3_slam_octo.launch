<!--
  Launch file to perform mapping using octomap with the radar
 -->
<launch>
  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration, radar_octo]"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>
  <arg scan_method="method" default="radar" doc="type of scan method"/>

  <!-- TurtleBot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
    <arg scan_method="radar" value="$(arg scan_method)"/>
  </include>

  <!-- Add nodes to filter/limit Radar data before using it for mapping -->
  <include file="$(find turtlebot_mmwave_launchers)/launch/radar_limit_filters.launch">
  </include>

  <!-- Create "raw" 3D map using first octomap node -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_raw" output="screen" >
    <remap from="octomap_point_cloud_centers" to="raw_point_cloud_centers" />
    <remap from="projected_map" to="raw_map" />
    <remap from="cloud_in" to="xyzi_filt_out" />
  </node>

  <!-- Perform SOR filtering on output from "raw" octomap node -->
  <node pkg="nodelet" type="nodelet" name="mapping_SOR_filt_mapping" args="standalone pcl/StatisticalOutlierRemoval" output="screen" >
    <remap from="~input" to="raw_point_cloud_centers" />
    <remap from="~output" to="mapping_SOR_filter_out" />
    <param name="mean_k" value="20" />
    <param name="stddev" value="0.04" />
  </node>

  <!-- Create "filtered" 3D map using second octomap node -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_filtered" output="screen" >
    <remap from="octomap_point_cloud_centers" to="filtered_point_cloud_centers" />
    <remap from="projected_map" to="filtered_map" />
    <remap from="cloud_in" to="mapping_SOR_filter_out" />
  </node>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_slam)/rviz/turtlebot3_$(arg slam_methods).rviz"/>
  </group>
</launch>

